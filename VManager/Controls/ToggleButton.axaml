<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:ClassModifier="internal">

    <Design.PreviewWith>
        <Border Padding="20" Background="Gray" Width="600">
            <Grid ColumnDefinitions="*,*,*">
                <StackPanel Grid.Column="0" Spacing="10">
                    <ToggleButton Theme="{DynamicResource ThemeToggleButton}" />
                    <ToggleButton Theme="{DynamicResource ThemeToggleButton}" IsChecked="True" />
                    <ToggleButton Theme="{DynamicResource ThemeToggleButton}">  Unchecked</ToggleButton>
                    <ToggleButton Theme="{DynamicResource ThemeToggleButton}" IsChecked="True">Checked</ToggleButton>
                    <ToggleButton Theme="{DynamicResource ThemeToggleButton}" IsThreeState="True" IsChecked="{x:Null}">Indeterminate</ToggleButton>
                    <ToggleButton Theme="{DynamicResource ThemeToggleButton}" Width="120">Checkbox should wrap its text</ToggleButton>
                </StackPanel>
                <StackPanel Grid.Column="1" Spacing="10">
                    <ToggleButton Theme="{DynamicResource ThemeToggleButton}" />
                    <ToggleButton Theme="{DynamicResource ThemeToggleButton}" IsChecked="True" />
                    <ToggleButton Theme="{DynamicResource ThemeToggleButton}"> Unchecked</ToggleButton>
                    <ToggleButton Theme="{DynamicResource ThemeToggleButton}" IsChecked="True">Checked</ToggleButton>
                    <ToggleButton Theme="{DynamicResource ThemeToggleButton}" IsThreeState="True" IsChecked="{x:Null}">Indeterminate</ToggleButton>
                    <ToggleButton Theme="{DynamicResource ThemeToggleButton}" Width="120">Checkbox should wrap its text</ToggleButton>
                </StackPanel>
                <StackPanel Grid.Column="2" Spacing="20">
                    <ToggleButton Content="Click Me!" />
                    <ToggleButton Content="Disabled" IsEnabled="False" />
                    <ToggleButton Content="Three state" IsThreeState="True" />
                </StackPanel>
            </Grid>
        </Border>
    </Design.PreviewWith>
    
     <ControlTheme x:Key="{x:Type ToggleButton}" TargetType="ToggleButton">
    <Setter Property="Background" Value="{DynamicResource ToggleButtonBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForeground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ToggleButtonBorderThemeThickness}" />
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="RenderTransform" Value="none" />
    <Setter Property="Transitions">
      <Transitions>
        <TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
      </Transitions>
    </Setter>

    <Setter Property="Template">
      <ControlTemplate>
        <ContentPresenter x:Name="PART_ContentPresenter"
                          Background="{DynamicResource WindowBackgroundBrush}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="{TemplateBinding CornerRadius}"
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          Padding="{TemplateBinding Padding}"
                          RecognizesAccessKey="True"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
      </ControlTemplate>
    </Setter>

    <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPointerOver}" />
      <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPointerOver}" />
      <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundPointerOver}" />
    </Style>

    <Style Selector="^:pressed">
      <Setter Property="RenderTransform" Value="scale(0.98)" />
    </Style>

    <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
      <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPressed}" />
      <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundPressed}" />
    </Style>

    <Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundDisabled}" />
      <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushDisabled}" />
      <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundDisabled}" />
    </Style>

    <Style Selector="^:indeterminate">
      <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundIndeterminate}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushIndeterminate}" />
        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundIndeterminate}" />
      </Style>

      <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundIndeterminatePointerOver}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushIndeterminatePointerOver}" />
        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundIndeterminatePointerOver}" />
      </Style>

      <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundIndeterminatePressed}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushIndeterminatePressed}" />
        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundIndeterminatePressed}" />
      </Style>

      <Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundIndeterminateDisabled}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushIndeterminateDisabled}" />
        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundIndeterminateDisabled}" />
      </Style>
    </Style>

    <!--- AccentBrush para el Background. El contrario para el font -->
    <Style Selector="^:checked">
      <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}" /> 
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushChecked}" />
        <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrush}" />
      </Style>

      <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPointerOver}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedPointerOver}" />
        <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrush}" />
      </Style>

      <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundChecked}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushChecked}" />
        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundChecked}" />
      </Style>

      <Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedDisabled}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedDisabled}" />
        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedDisabled}" />
      </Style>
    </Style>
  </ControlTheme>
    
    <ControlTheme x:Key="ThemeToggleButton" TargetType="ToggleButton">
    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ToggleButtonBorderThemeThickness}" />
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="RenderTransform" Value="none" />
    <Setter Property="Transitions">
      <Transitions>
        <TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
      </Transitions>
    </Setter>

    <Setter Property="Template">
      <ControlTemplate>
          
          <Grid ColumnDefinitions="Auto, 10, *">
          
          <Border x:Name="PartToggleButton" 
              Padding="2" 
              BorderThickness="2"
              BorderBrush="{DynamicResource BorderBrushPrimaryDark}"
              Background="{TemplateBinding Background}" 
              CornerRadius="15" 
              VerticalAlignment="Top">
            <Border Width="30" Height="20" Margin="0 0 15 0" Background="{DynamicResource SystemChromeGrayColor}" CornerRadius="10">
                <Border.Transitions>
                    <Transitions>
                        <ThicknessTransition Property="Margin" Duration="0:0:0.075"/>
                    </Transitions>
                </Border.Transitions>
            </Border>
          </Border>
          <!--<ContentPresenter Grid.Column="2" x:Name="PartContentPresenter"
                            Content="{TemplateBinding Content}" 
                            VerticalAlignment="Center"
                            ContentTemplate="{TemplateBinding ContentTemplate}" /> -->
        </Grid>
      </ControlTemplate>
      
    </Setter>
    
    <!-- Default style -->
    <Style Selector="^ /template/ ContentPresenter#PartContentPresenter">
        <Setter Property="FontWeight" Value="Normal" />
    </Style>
    
    <!-- Unchecked style -->
    <Style Selector="^:not(:checked) /template/ Border#PartToggleButton">
        <Setter Property="Background" Value="Transparent" />
    </Style>
    
    <!-- IsChecked style -->
    <Style Selector="^:checked /template/ Border#PartToggleButton">
            <Setter Property="Background" Value="{DynamicResource BorderBrushPrimaryDark}" />
            <Setter Property="BorderBrush" Value="{DynamicResource PanelBackgroundBrushLight}"/>
            
            <Style Selector="^ Border">
                <Setter Property="Margin" Value="15 0 0 0"/>
                <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrushLight}"/>
                
            </Style>
            
    </Style>
    
    <!-- PointerOver style -->
    <Style Selector="^:pointerover:not(:checked) /template/ Border#PartToggleButton">
        <Setter Property="Background" Value="{DynamicResource BorderBrushPrimaryDark}" />
        <Style Selector="^ Border">
            <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrushLight}"/>
        </Style>
    </Style>
    
    <!-- PointerOver style -->
    <Style Selector="^:pointerover:checked /template/ Border#PartToggleButton">
        <Setter Property="Background" Value="{DynamicResource SystemChromeGrayColor}" />
        <Style Selector="^ Border">
            <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrushLight}"/>
        </Style>
    </Style>
    
    </ControlTheme>
    
</ResourceDictionary>