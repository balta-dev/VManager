<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             x:Class="VManager.Views.Herramienta3View"
             x:DataType="vm:Herramienta3ViewModel"
             xmlns:vm="using:VManager.ViewModels"
             xmlns:behaviors="clr-namespace:VManager.Behaviors"
             xmlns:global="clr-namespace:">

  <!-- Se estira a toda la ventana y recorta cuando falta espacio -->
  <Grid ClipToBounds="True">

    <!-- Border con margen fijo de 20 -->
    <Border BorderBrush="{DynamicResource BorderBrushPrimary}" 
            BorderThickness="2" 
            CornerRadius="10" 
            Padding="0" 
            Margin="20,20,20,0"
            Background="{DynamicResource PanelBackgroundBrush}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            ClipToBounds="True">
      
      <ScrollViewer Padding="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" AllowAutoHide="True" Background="Transparent">

      <StackPanel Margin="20" Spacing="12" HorizontalAlignment="Center" VerticalAlignment="Center">

        <!-- TÃ­tulo -->
        <TextBlock Text="ConversiÃ³n de Videos" 
                   FontSize="25" 
                   HorizontalAlignment="Center" 
                   FontWeight="Bold"/>

        <!-- BotÃ³n regenerar -->
        <Button Content="ðŸ—˜ Regenerar cachÃ©"
                Command="{Binding RefreshCodecsCommand}"
                Width="150"
                Margin="0,0,0,30"
                HorizontalAlignment="Center"/>

        <!-- SelecciÃ³n de archivo -->
        <StackPanel Spacing="6" HorizontalAlignment="Stretch">
          <StackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Center">
            <TextBlock Text="Seleccionar Video:" FontSize="14" VerticalAlignment="Center"/>
            <Button Content="Examinar" Command="{Binding BrowseCommand}" Width="100"/>
          </StackPanel>
          <Border behaviors:DragDropHelper.EnableFileDrop="True"
                  behaviors:DragDropHelper.DropTarget="VideoPath"
                  Padding="2">
          <TextBox Text="{Binding VideoPath}" 
                   IsReadOnly="True" 
                   Watermark="Ruta del video"
                   HorizontalAlignment="Stretch"/>
          </Border>
        </StackPanel>

        <!-- SelecciÃ³n de formato -->
        <StackPanel Orientation="Horizontal" Spacing="10" Margin="0,15,0,0" HorizontalAlignment="Center">
          <TextBlock Text="Â¿A quÃ© formato?" FontSize="14" VerticalAlignment="Center"/>
          <ComboBox ItemsSource="{Binding SupportedFormats}"
                    SelectedItem="{Binding SelectedFormat}"
                    Width="100"/>
          <Button x:Name="QuestionMark" Content="?" Width="30" FontWeight="Bold">
            <ToolTip.Tip>
              <TextBlock MaxWidth="400" TextWrapping="Wrap">
                <Run Text="Selecciona el formato de salida para tu video."/>
                <LineBreak/><LineBreak/>
                <Run Text="Combinaciones mÃ¡s compatibles:"/>
                <LineBreak/>
                <Run Text="â€¢ MP4 + AAC (mÃ¡xima compatibilidad)"/>
                <LineBreak/>
                <Run Text="â€¢ MKV + cualquier audio (mÃ¡s flexible)"/>
                <LineBreak/>
                <Run Text="â€¢ WebM + Opus (optimizado web)"/>
                <LineBreak/><LineBreak/>
                <Run Text="Nota: FFmpeg puede combinar casi cualquier formato, pero algunas combinaciones podrÃ­an no reproducirse en todos los dispositivos."/>
              </TextBlock>
            </ToolTip.Tip>
          </Button>
        </StackPanel>

        <!-- Textos. Los puse acÃ¡ porque si los ponÃ­a en el stack panel abajo quedan uno al lado del otro -->
        <Grid HorizontalAlignment="Left" Margin="0,10,0,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>  <!-- Para "CÃ³dec de Video:" -->
            <ColumnDefinition Width="168"/>     <!-- Espacio flexible -->
            <ColumnDefinition Width="Auto"/>  <!-- Para "CÃ³dec de Audio:" -->
          </Grid.ColumnDefinitions>
          <TextBlock Grid.Column="0" Text="CÃ³dec de Video:" VerticalAlignment="Center"/>
          <TextBlock Grid.Column="2" Text="CÃ³dec de Audio:" VerticalAlignment="Center"/>
        </Grid>
        
          <!-- Codecs Video + Audio -->
        <StackPanel Orientation="Horizontal" Spacing="40" HorizontalAlignment="Center" Margin="0,0,0,0">

          <!-- Video -->
          <StackPanel Orientation="Horizontal" Spacing="6">
            <Button x:Name="QuestionMark2" Content="?" Width="30" FontWeight="Bold">
              <ToolTip.Tip>
                <TextBlock MaxWidth="400" TextWrapping="Wrap">
                  <Run Text="La opciÃ³n predeterminada es la mejor para la mayorÃ­a de los casos."/>
                  <LineBreak/><LineBreak/>
                  <Run Text="Se prioriza la aceleraciÃ³n por hardware (que se utilice tu GPU)."/>
                  <LineBreak/><LineBreak/>
                  <Run Text="Un cÃ³dec de video bÃ¡sicamente comprime y descomprime video para ahorrar espacio o transmitir mÃ¡s rÃ¡pido."/>
                  <LineBreak/><LineBreak/>
                  <Run Text="Si prefieres usar la CPU en lugar de la GPU, usa codecs como 'libx264'."/>
                  <LineBreak/>
                  <Run Text="La ventaja de usar la CPU es que provee la mejor calidad. La desventaja es que es mucho mÃ¡s lento."/>
                </TextBlock>
              </ToolTip.Tip>
            </Button>
            <ComboBox ItemsSource="{Binding AvailableVideoCodecs}" 
                      SelectedItem="{Binding SelectedVideoCodec, Mode=TwoWay}"
                      Width="200"/>
          </StackPanel>

          <!-- Audio -->
          <StackPanel Orientation="Horizontal" Spacing="6">
            <Button x:Name="QuestionMark3" Content="?" Width="30" FontWeight="Bold">
              <ToolTip.Tip>
                <TextBlock MaxWidth="400" TextWrapping="Wrap">
                  <Run Text="La opciÃ³n predeterminada es la mejor para la mayorÃ­a de los casos."/>
                  <LineBreak/><LineBreak/>
                  <Run Text="Un cÃ³dec de audio bÃ¡sicamente comprime y descomprime audio para ahorrar espacio o transmitir mÃ¡s rÃ¡pido."/>
                  <LineBreak/><LineBreak/>
                  <Run Text="FLAC permite una calidad de audio excepcional, con la desventaja de consumir mucho espacio de almacenamiento."/>
                </TextBlock>
              </ToolTip.Tip>
            </Button>
            <ComboBox ItemsSource="{Binding AvailableAudioCodecs}" 
                      SelectedItem="{Binding SelectedAudioCodec, Mode=TwoWay}"
                      Width="200"/> 
          </StackPanel>

        </StackPanel>

        <!-- Barra de progreso + % -->
        <Grid Margin="0,20,0,0" HorizontalAlignment="Stretch">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>

          <ProgressBar Grid.Column="0" Minimum="0" Maximum="100" 
                       Value="{Binding Progress}" Height="20"/>
          <TextBlock Grid.Column="1" Text="{Binding Progress, StringFormat={}{0}%}"
                     VerticalAlignment="Center" Margin="8,0,0,0"/>
        </Grid>
        
        <!-- BotÃ³n convertir -->
        <Button Content="Convertir Formato de Video"  
                FontSize="18" 
                Command="{Binding ConvertCommand}" 
                Width="255" 
                Margin="0,15,0,0" 
                HorizontalAlignment="Center"/>

        <!-- Estado -->
        <TextBlock Text="{Binding Status}" FontSize="12" Margin="0,3,0,0" HorizontalAlignment="Center"/>
        <TextBlock Text="{Binding OutputPath}" FontSize="12" Margin="0,0,0,0" HorizontalAlignment="Center"/>
        <TextBlock Text="{Binding Warning}" FontSize="12" Margin="0,0,0,0" HorizontalAlignment="Center"/>

        <!-- Mostrar archivo en carpeta -->
        <Button Content="Mostrar archivo en carpeta"
                IsVisible="{Binding IsFileReadyVisible}"
                Command="{Binding ShowFileInFolderCommand}"
                HorizontalAlignment="Center"
                Margin="0,20,0,0">
          <Button.Styles>
            <!-- Estado normal -->
            <Style Selector="Button">
              <Setter Property="Background" Value="{DynamicResource SystemAccentColor}"/>
            </Style>
            <!-- Hover -->
            <Style Selector="Button:pointerover">
              <Setter Property="Background" Value="{DynamicResource SystemAccentColorLight1}"/>
            </Style>
            <!-- Presionado -->
            <Style Selector="Button:pressed">
              <Setter Property="Background" Value="{DynamicResource SystemAccentColorDark1}"/>
            </Style>
          </Button.Styles>
        </Button>

      </StackPanel>
      </ScrollViewer>
    </Border>
  </Grid>
</UserControl>
